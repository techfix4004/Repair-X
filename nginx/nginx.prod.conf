worker_processes auto;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log error;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;

    # Buffer optimizations
    client_body_buffer_size 128k;
    client_max_body_size 50M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream servers with load balancing
    upstream frontend {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream backend {
        least_conn;
        server backend:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name _;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTP to HTTPS redirect (DISABLED FOR TESTING WITHOUT SSL)
    # server {
    #     listen 80;
    #     server_name repairx.com www.repairx.com;
    #     return 301 https://$server_name$request_uri;
    # }

    # Main HTTPS server (DISABLED FOR TESTING WITHOUT SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name repairx.com www.repairx.com;
    #
    #     # SSL certificates
    #     ssl_certificate /etc/nginx/ssl/repairx.crt;
    #     ssl_certificate_key /etc/nginx/ssl/repairx.key;
    #
    #     # Security headers
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #     add_header X-Content-Type-Options nosniff always;
    #     add_header X-Frame-Options DENY always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    #     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https://api.stripe.com; frame-src https://js.stripe.com;" always;
    #
    #     # Connection limiting
    #     limit_conn addr 50;
    #
    #     # API routes
    #     location /api/ {
    #         limit_req zone=api burst=200 nodelay;
    #
    #         proxy_pass http://backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #
    #         # Timeouts
    #         proxy_connect_timeout 60s;
    #         proxy_send_timeout 60s;
    #         proxy_read_timeout 60s;
    #
    #         # WebSocket support
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #
    #         # Caching for GET requests
    #         location ~* ^/api/v1/(services|categories|devices/categories) {
    #             proxy_cache_valid 200 5m;
    #             proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    #         }
    #     }
    #
    #     # Auth routes with additional rate limiting
    #     location ~* ^/api/v1/auth/(login|register|reset-password) {
    #         limit_req zone=login burst=10 nodelay;
    #
    #         proxy_pass http://backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    #
    #     # File uploads
    #     location /api/v1/uploads {
    #         limit_req zone=upload burst=20 nodelay;
    #         client_max_body_size 50M;
    #
    #         proxy_pass http://backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #
    #         proxy_request_buffering off;
    #         proxy_read_timeout 300s;
    #         proxy_send_timeout 300s;
    #     }
    #
    #     # Static files and frontend routes
    #     location / {
    #         proxy_pass http://frontend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #
    #         # Cache static assets aggressively
    #         location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    #             expires 1y;
    #             add_header Cache-Control "public, immutable";
    #             access_log off;
    #         }
    #
    #         # Cache HTML with shorter expiration
    #         location ~* \.html$ {
    #             expires 1h;
    #             add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    #         }
    #     }
    #
    #     # Deny access to sensitive files
    #     location ~ /\. {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #     }
    #
    #     location ~ \.(conf|log)$ {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #     }
    # }

    # ENABLED: HTTP production server handling all routes (no SSL)
    server {
        listen 80 default_server;
        server_name _;

        # Connection limiting
        limit_conn addr 50;

        # API routes
        location /api/ {
            limit_req zone=api burst=200 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Caching for GET requests
            location ~* ^/api/v1/(services|categories|devices/categories) {
                proxy_cache_valid 200 5m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            }
        }

        # Auth routes with additional rate limiting
        location ~* ^/api/v1/auth/(login|register|reset-password) {
            limit_req zone=login burst=10 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File uploads
        location /api/v1/uploads {
            limit_req zone=upload burst=20 nodelay;
            client_max_body_size 50M;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_request_buffering off;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Static files and frontend routes
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cache static assets aggressively
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }

            # Cache HTML with shorter expiration
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            }
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(conf|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
